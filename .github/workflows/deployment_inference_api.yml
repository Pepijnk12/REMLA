name: Deploy the docker image and the trained model

on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Parse version info from tag
        run: |
          # GITHUB_REF is like refs/tags/v2.3.5, so strip the first 11 chars
          VERSION=${GITHUB_REF:11}
          MAJOR=`echo "$VERSION" | cut -d . -f 1`
          MINOR=`echo "$VERSION" | cut -d . -f 2`
          PATCH=`echo "$VERSION" | cut -d . -f 3`
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "version_major=$MAJOR" >> $GITHUB_ENV
          echo "version_minor=$MINOR" >> $GITHUB_ENV
          echo "version_patch=$PATCH" >> $GITHUB_ENV
      - name: Login to registry
        run: echo "${{ secrets.PAC_IMAGE_DEPLOYMENT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - id: read-docker-image-identifiers
        name: Read Docker Image Identifiers
        run: echo ::set-env name=IMAGE_REPOSITORY::$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')

      - name: Build and push
        run: |
          IMG=ghcr.io/${{ env.IMAGE_REPOSITORY }}
          docker build \
            -f docker/inference-api/Dockerfile \
            -t ${IMG}:inference-api-latest \
            -t ${IMG}:inference-api-${{ env.version_major }}-latest \
            -t ${IMG}:inference-api-${{ env.version_major }}.${{ env.version_minor }}-latest \
            -t ${IMG}:inference-api-${{ env.version }} \
            .
          docker push --all-tags $IMG
